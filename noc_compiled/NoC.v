// -*- mode: verilog -*-
// Generated by cuttlec from a KÃ´ika module
module NoC(input wire[0:0] CLK, input wire[0:0] RST_N, output wire[8:0] extfn_5_arg, output wire[8:0] extfn_8_arg, input wire[8:0] extfn_7_out, input wire[8:0] extfn_1_out, output wire[8:0] extfn_3_arg, input wire[8:0] extfn_3_out, output wire[8:0] extfn_4_arg, output wire[8:0] extfn_7_arg, output wire[8:0] extfn_6_arg, input wire[8:0] extfn_4_out, output wire[8:0] extfn_1_arg, input wire[8:0] extfn_2_out, input wire[8:0] extfn_6_out, output wire[8:0] extfn_2_arg, input wire[8:0] extfn_5_out, input wire[8:0] extfn_8_out);
	reg[8:0] r1 /* verilator public */ = 9'b0;
	reg[8:0] r2 /* verilator public */ = 9'b0;
	reg[8:0] r3 /* verilator public */ = 9'b0;
	reg[8:0] r4 /* verilator public */ = 9'b0;
	reg[8:0] r5 /* verilator public */ = 9'b0;
	reg[8:0] r6 /* verilator public */ = 9'b0;
	reg[8:0] r7 /* verilator public */ = 9'b0;

	assign extfn_1_arg = 9'b0;
	wire[0:0] _cond0 = extfn_1_out[8 +: 1] && extfn_1_out[6 +: 2] == 2'b0;
	wire[0:0] _cond1 = r1[6 +: 2] != 2'b0 && r1[8 +: 1];
	wire[1:0] _0 = r1[4 +: 2];
	wire[0:0] _cond2 = $unsigned(_0) > $unsigned(2'b0);
	wire[0:0] _cond3 = $unsigned(_0) < $unsigned(2'b0);
	assign extfn_3_arg = 9'b0;
	wire[0:0] _1 = extfn_3_out[8 +: 1];
	wire[1:0] _2 = extfn_3_out[6 +: 2];
	wire[1:0] _3 = extfn_3_out[4 +: 2];
	wire[0:0] _cond4 = _1 && (_2 == 2'b01 && $unsigned(_3) > $unsigned(2'b01));
	wire[0:0] _cond5 = _1 && (_2 == 2'b01 && $unsigned(_3) < $unsigned(2'b01));
	wire[0:0] _cond6 = r2[6 +: 2] != 2'b01 && r2[8 +: 1];
	wire[0:0] _cond7 = r1[6 +: 2] != 2'b01 && r1[8 +: 1];
	assign extfn_5_arg = 9'b0;
	wire[0:0] _4 = extfn_5_out[8 +: 1];
	wire[1:0] _5 = extfn_5_out[6 +: 2];
	wire[1:0] _6 = extfn_5_out[4 +: 2];
	wire[0:0] _cond8 = _4 && (_5 == 2'b10 && $unsigned(_6) > $unsigned(2'b10));
	wire[0:0] _cond9 = _4 && (_5 == 2'b10 && $unsigned(_6) < $unsigned(2'b10));
	wire[0:0] _cond10 = r3[6 +: 2] != 2'b10 && r3[8 +: 1];
	wire[0:0] _cond11 = r2[6 +: 2] != 2'b10 && r2[8 +: 1];
	assign extfn_7_arg = 9'b0;
	wire[0:0] _cond12 = extfn_7_out[8 +: 1] && extfn_7_out[6 +: 2] == 2'b11;
	wire[0:0] _cond13 = r3[6 +: 2] != 2'b11 && r3[8 +: 1];
	wire[1:0] _7 = r3[4 +: 2];
	wire[0:0] _cond14 = $unsigned(_7) > $unsigned(2'b11);
	wire[0:0] _cond15 = $unsigned(_7) < $unsigned(2'b11);
	wire[0:0] _if_canFire0 = _cond12 || (_cond13 ? ~_cond14 && ~(_cond14 ? 1'b0 : _cond15) : 1'b1);
	wire[0:0] _router_4_out0 = _if_canFire0 && (_cond12 || _cond13);
	wire[1:0] _8 = r2[4 +: 2];
	wire[0:0] _cond16 = $unsigned(_8) > $unsigned(2'b10);
	wire[0:0] _wF_router_30 = (_cond8 || (_cond9 || (_cond10 ? 1'b0 : ~_cond11))) && ((~(_cond8 ? 1'b0 : ~_cond9) || ~_router_4_out0) && (~(_cond8 || (_cond9 ? 1'b0 : _cond10 || _cond11 && _cond16)) || ~_router_4_out0));
	wire[1:0] _9 = r3[4 +: 2];
	wire[0:0] _cond17 = $unsigned(_9) > $unsigned(2'b10);
	wire[0:0] _cond18 = $unsigned(_9) < $unsigned(2'b10);
	wire[0:0] _router_3_out0 = _wF_router_30 && (_cond8 ? 1'b0 : _cond9 || (_cond10 && ~_cond17 ? _cond18 || _cond11 : _cond11));
	wire[1:0] _10 = r1[4 +: 2];
	wire[0:0] _cond19 = $unsigned(_10) > $unsigned(2'b01);
	wire[0:0] _wF_router_20 = (_cond4 || (_cond5 || (_cond6 ? 1'b0 : ~_cond7))) && ((~(_cond4 ? 1'b0 : ~_cond5) || ~_router_3_out0) && (~(_cond4 || (_cond5 ? 1'b0 : _cond6 || _cond7 && _cond19)) || ~_router_3_out0));
	wire[1:0] _11 = r2[4 +: 2];
	wire[0:0] _cond20 = $unsigned(_11) > $unsigned(2'b01);
	wire[0:0] _cond21 = $unsigned(_11) < $unsigned(2'b01);
	wire[0:0] _router_2_out0 = _wF_router_20 && (_cond4 ? 1'b0 : _cond5 || (_cond6 && ~_cond20 ? _cond21 || _cond7 : _cond7));
	wire[0:0] _wF_router_10 = (_cond0 || (_cond1 ? (_cond2 || ~_cond3) && ~_cond2 : 1'b1)) && ((_cond0 || ~_router_2_out0) && (~(_cond0 || _cond1) || ~_router_2_out0));
	wire[8:0] _router_2_out1 = _wF_router_20 && ~_cond4 ? (_cond5 ? extfn_3_out : (_cond6 && ~(_cond20 || ~_cond21) ? {{r2[8 +: 1], 2'b01}, r2[0 +: 6]} : (_cond7 ? {1'b0, r1[0 +: 8]} : r1))) : r1;
	wire[8:0] _router_3_out1 = _wF_router_30 && ~_cond8 ? (_cond9 ? extfn_5_out : (_cond10 && ~(_cond17 || ~_cond18) ? {{r3[8 +: 1], 2'b10}, r3[0 +: 6]} : (_cond11 ? {1'b0, r2[0 +: 8]} : r2))) : r2;
	wire[8:0] _router_4_out1 = _if_canFire0 ? (_cond12 ? extfn_7_out : (_cond13 ? {1'b0, r3[0 +: 8]} : r3)) : r3;
	assign extfn_2_arg = r1;
	assign extfn_4_arg = r2;
	assign extfn_4_arg = r1;
	assign extfn_6_arg = r3;
	assign extfn_6_arg = r2;
	assign extfn_8_arg = r3;

	always @(posedge CLK) begin
		if (!RST_N) begin
			r1 <= 9'b0;
			r2 <= 9'b0;
			r3 <= 9'b0;
			r4 <= 9'b0;
			r5 <= 9'b0;
			r6 <= 9'b0;
			r7 <= 9'b0;
		end else begin
			r1 <= _wF_router_10 ? (_cond0 ? extfn_1_out : (_cond1 ? {1'b0, r1[0 +: 8]} : _router_2_out1)) : _router_2_out1;
			r2 <= _wF_router_20 ? (_cond4 ? extfn_3_out : (_cond5 ? _router_3_out1 : (_cond6 ? {1'b0, r2[0 +: 8]} : (_cond7 && _cond19 ? {{r1[8 +: 1], 2'b01}, r1[0 +: 6]} : _router_3_out1)))) : _router_3_out1;
			r3 <= _wF_router_30 ? (_cond8 ? extfn_5_out : (_cond9 ? _router_4_out1 : (_cond10 ? {1'b0, r3[0 +: 8]} : (_cond11 && _cond16 ? {{r2[8 +: 1], 2'b10}, r2[0 +: 6]} : _router_4_out1)))) : _router_4_out1;
			r4 <= _wF_router_10 && ~(_cond0 || ~(_cond1 && ~(_cond2 || _cond3))) ? extfn_2_out : r4;
			r5 <= _wF_router_20 && ~(_cond4 || _cond5) ? (_cond6 && ~(_cond20 || _cond21) ? extfn_4_out : (_cond7 && ~(_cond19 || $unsigned(_10) < $unsigned(2'b01)) ? extfn_4_out : r5)) : r5;
			r6 <= _wF_router_30 && ~(_cond8 || _cond9) ? (_cond10 && ~(_cond17 || _cond18) ? extfn_6_out : (_cond11 && ~(_cond16 || $unsigned(_8) < $unsigned(2'b10)) ? extfn_6_out : r6)) : r6;
			r7 <= _if_canFire0 && ~(_cond12 || ~(_cond13 && ~(_cond14 || _cond15))) ? extfn_8_out : r7;
		end
	end
endmodule
