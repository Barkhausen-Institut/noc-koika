// -*- mode: verilog -*-
// Generated by cuttlec from a KÃ´ika module
module NoC(input wire[0:0] CLK, input wire[0:0] RST_N, output wire[13:0] tile_out_arg, input wire[13:0] tile_in_out, input wire[13:0] tile_out_out, output wire[0:0] tile_in_arg);
	reg[13:0] r1 /* verilator public */ = 14'b0;
	reg[13:0] r2 /* verilator public */ = 14'b0;
	reg[13:0] r3 /* verilator public */ = 14'b0;

	wire[0:0] _cond0 = r1[9 +: 4] != 4'b0 && r1[13 +: 1];
	wire[1:0] _0 = r1[5 +: 2];
	wire[0:0] _cond1 = $unsigned(_0) > $unsigned(2'b0);
	wire[0:0] _cond2 = $unsigned(_0) < $unsigned(2'b0);
	wire[0:0] _cond3 = r2[9 +: 4] != 4'b0001 && r2[13 +: 1];
	wire[1:0] _1 = r2[5 +: 2];
	wire[0:0] _cond4 = $unsigned(_1) > $unsigned(2'b01);
	wire[0:0] _cond5 = r1[9 +: 4] != 4'b0001 && r1[13 +: 1];
	wire[1:0] _2 = r1[5 +: 2];
	wire[0:0] _cond6 = $unsigned(_2) > $unsigned(2'b01);
	wire[0:0] _if_canFire0 = _cond5 ? _cond6 : 1'b1;
	wire[0:0] _if_mux0 = _cond5 && _cond6;
	wire[0:0] _cond7 = r3[9 +: 4] != 4'b0010 && r3[13 +: 1];
	wire[1:0] _3 = r3[5 +: 2];
	wire[0:0] _cond8 = $unsigned(_3) > $unsigned(2'b10);
	wire[0:0] _cond9 = r2[9 +: 4] != 4'b0010 && r2[13 +: 1];
	wire[1:0] _4 = r2[5 +: 2];
	wire[0:0] _cond10 = $unsigned(_4) > $unsigned(2'b10);
	wire[0:0] _if_canFire1 = _cond9 ? _cond10 : 1'b1;
	wire[0:0] _if_mux1 = _cond9 && _cond10;
	wire[0:0] _cond11 = r3[9 +: 4] != 4'b0011 && r3[13 +: 1];
	wire[1:0] _5 = r3[5 +: 2];
	wire[0:0] _cond12 = $unsigned(_5) > $unsigned(2'b11);
	wire[0:0] _if_canFire2 = _cond11 ? ~_cond12 : 1'b1;
	wire[0:0] _router_4_out0 = _if_canFire2 && (_cond11 && ~_cond12);
	wire[0:0] _wF_router_30 = (_cond7 ? (_cond8 ? 1'b0 : (_if_canFire1 && ~_if_mux1) && ~_cond9) : _if_canFire1) && (~_router_4_out0 && (~(_cond7 || _if_mux1) || ~_router_4_out0));
	wire[0:0] _router_3_out0 = _wF_router_30 && (_cond7 && ~_cond8 || _cond9);
	wire[0:0] _wF_router_20 = (_cond3 ? (_cond4 ? 1'b0 : (_if_canFire0 && ~_if_mux0) && ~_cond5) : _if_canFire0) && (~_router_3_out0 && (~(_cond3 || _if_mux0) || ~_router_3_out0));
	wire[0:0] _router_2_out0 = _wF_router_20 && (_cond3 && ~_cond4 || _cond5);
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_out_arg = r2;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_out_arg = r1;
	assign tile_in_arg = 1'b0;
	wire[13:0] _router_2_out1 = _wF_router_20 ? (_cond3 && ~_cond4 ? ($unsigned(_1) < $unsigned(2'b01) ? {{r2[13 +: 1], 4'b0001}, r2[0 +: 9]} ^ tile_in_out : tile_out_out ^ tile_in_out) : (_cond5 ? (_cond6 ? {1'b0, r1[0 +: 13]} ^ tile_in_out : ($unsigned(_2) < $unsigned(2'b01) ? {{r1[13 +: 1], 4'b0001}, r1[0 +: 9]} ^ tile_in_out : tile_out_out ^ tile_in_out)) : r1)) : r1;
	assign tile_out_arg = r1;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_out_arg = r3;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_out_arg = r2;
	assign tile_in_arg = 1'b0;
	wire[13:0] _router_3_out1 = _wF_router_30 ? (_cond7 && ~_cond8 ? ($unsigned(_3) < $unsigned(2'b10) ? {{r3[13 +: 1], 4'b0010}, r3[0 +: 9]} ^ tile_in_out : tile_out_out ^ tile_in_out) : (_cond9 ? (_cond10 ? {1'b0, r2[0 +: 13]} ^ tile_in_out : ($unsigned(_4) < $unsigned(2'b10) ? {{r2[13 +: 1], 4'b0010}, r2[0 +: 9]} ^ tile_in_out : tile_out_out ^ tile_in_out)) : r2)) : r2;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_in_arg = 1'b0;
	assign tile_out_arg = r3;
	assign tile_in_arg = 1'b0;
	wire[13:0] _router_4_out1 = _if_canFire2 && (_cond11 && ~_cond12) ? ($unsigned(_5) < $unsigned(2'b11) ? {{r3[13 +: 1], 4'b0011}, r3[0 +: 9]} ^ tile_in_out : tile_out_out ^ tile_in_out) : r3;

	always @(posedge CLK) begin
		if (!RST_N) begin
			r1 <= 14'b0;
			r2 <= 14'b0;
			r3 <= 14'b0;
		end else begin
			r1 <= ((_cond0 ? _cond1 || ~_cond2 : 1'b1) && (~_router_2_out0 && (~(_cond0 && (_cond1 || ~_cond2)) || ~_router_2_out0))) && _cond0 ? (_cond1 ? {{r1[13 +: 1], 4'b0}, r1[0 +: 9]} ^ tile_in_out : (_cond2 ? _router_2_out1 : tile_out_out ^ tile_in_out)) : _router_2_out1;
			r2 <= _wF_router_20 ? (_cond3 ? (_cond4 ? {{r2[13 +: 1], 4'b0001}, r2[0 +: 9]} ^ tile_in_out : {1'b0, r2[0 +: 13]} ^ tile_in_out) : (_cond5 && _cond6 ? {{r1[13 +: 1], 4'b0001}, r1[0 +: 9]} ^ tile_in_out : _router_3_out1)) : _router_3_out1;
			r3 <= _wF_router_30 ? (_cond7 ? (_cond8 ? {{r3[13 +: 1], 4'b0010}, r3[0 +: 9]} ^ tile_in_out : {1'b0, r3[0 +: 13]} ^ tile_in_out) : (_cond9 && _cond10 ? {{r2[13 +: 1], 4'b0010}, r2[0 +: 9]} ^ tile_in_out : _router_4_out1)) : _router_4_out1;
		end
	end
endmodule
